pipeline {
  agent {
    docker {
      image 'kuroko24/jenkins-slave:v7'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Cloned the repo') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/NirajKapole/java-maven-argo-k8s.git'
      }
    }
    stage('Checkout') {
      steps {
        // Ensure the repository is checked out correctly
        checkout([$class: 'GitSCM',
                  branches: [[name: '*/main']],
                  userRemoteConfigs: [[url: 'https://github.com/NirajKapole/java-maven-argo-k8s.git']]
        ])
        
        // Verify the correct directory and list contents
        sh 'pwd'
        sh 'ls -la'
      }
    }
    stage('Verify File') {
      steps {
        // Debugging to verify where deployment.yml is located
        sh 'find . -name "deployment.yml"'
        sh 'ls -la ./spring-boot-app-manifests/deployment.yml'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'mvn clean package'
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "kuroko24/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "java-maven-argo-k8s"
        GIT_USER_NAME = "NirajKapole"
      }
      steps {
        // Use 'dir' to explicitly navigate to the correct directory if needed
        dir('spring-boot-app-manifests') {
          withCredentials([string(credentialsId: 'git-cred', variable: 'GITHUB_TOKEN')]) {
            sh '''
              git config --global user.email "nirajkapole6@gmail.com"
              git config --global user.name "NirajKapole"
              git config --global --add safe.directory /var/lib/jenkins/workspace/ultimate
              chmod 644 deployment.yml
              pwd  # Check if you are in the right directory
              ls -la  # Check if deployment.yml is present
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deployment.yml
              git add deployment.yml
              git commit -m "Update deployment image to version ${BUILD_NUMBER}"
              git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
            '''
          }
        }
      }
    }
  }
}
